#PARAMETER

INSERT INTO `stretchy_parameter` (`parameter_name`, `parameter_variable`, `parameter_label`, `parameter_displayType`, `parameter_FormatType`, `parameter_default`, `special`, `selectOne`, `selectAll`, `parameter_sql`, `parent_id`) VALUES ('loanProductId', 'loanProductIdonly', 'Product', 'select', 'number', '0', NULL, NULL, 'Y', 'select p.id, p.`name`\r\nfrom m_product_loan p\r\norder by 2', NULL);

#REPORTS

INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Arrears Summary isloanofficer', 'Table', NULL, 'Loan', 'select v.arrPeriod ArrearsBy ,v.totalDisbAmt,v.OutstandingAmt,v.arrearsAmt, b.tot `count` from (select a.arrPeriod arrPeriod,sum(a.totalDisbAmt) totalDisbAmt,sum(a.OutstandingAmt) OutstandingAmt, sum(a.arrearsAmt)  arrearsAmt\nfrom (SELECT ml.id loanId, \nsum(IFNULL(ml.principal_disbursed_derived,0)) as TotalDisbAmt,\nsum(ml.total_outstanding_derived) as OutstandingAmt,\nsum(laa.total_overdue_derived) ArrearsAmt,\nIFNULL(laa.overdue_since_date_derived, curdate()) as minOverdueDate,\nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_staff s on s.id = a.staff_id\ninner join m_loan ml on ml.loan_officer_id = s.id\ninner join m_loan_arrears_aging laa ON laa.loan_id = ml.id\nWHERE ml.loan_status_id=300\nand a.id = ${currentUserId}\ngroup by 6)a\ngroup by 1)v\nleft join \n(select sum(a.total) tot,a.arrPeriod from ((select count(*) total,IF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_staff s on s.id = a.staff_id\ninner join m_loan ml on ml.loan_officer_id = s.id and ml.loan_type_enum = 4\ninner join m_loan_arrears_aging aa on aa.loan_id = ml.id\ninner join m_loan_glim lg on lg.loan_id = ml.id\nwhere a.id = ${currentUserId}\n\ngroup by 2)\nunion\n(select count(*),IF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_staff s on s.id = a.staff_id\ninner join m_loan ml on ml.loan_officer_id = s.id and ml.loan_type_enum in (1,2,3)\ninner join m_loan_arrears_aging aa on aa.loan_id = ml.id\nwhere a.id = ${currentUserId}\ngroup by 2)\n)a\ngroup by 2)b on b.arrPeriod =v.arrPeriod', NULL, 0, 1, 0);
INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Arrears Summary notaloanofficer', 'Table', NULL, 'Loan', 'select v.arrPeriod band,v.totalDisbAmt,v.OutstandingAmt,v.arrearsAmt, b.tot `count` from (select a.arrPeriod arrPeriod,sum(a.totalDisbAmt) totalDisbAmt,sum(a.OutstandingAmt) OutstandingAmt, sum(a.arrearsAmt)  arrearsAmt\nfrom (SELECT ml.id loanId, \nsum(IFNULL(ml.principal_disbursed_derived,0)) as totalDisbAmt,\nsum(ml.total_outstanding_derived) as OutstandingAmt,\nsum(laa.total_overdue_derived) arrearsAmt,\nIFNULL(laa.overdue_since_date_derived, curdate()) as minOverdueDate,\nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_client c on c.office_id = ounder.id\ninner join m_loan ml on ml.client_id = c.id\ninner join m_loan_arrears_aging laa ON laa.loan_id = ml.id\n\n\nWHERE ml.loan_status_id=300\nAND a.id = ${currentUserId}\ngroup by 6\nunion\nSELECT ml.id loanId, \nsum(IFNULL(ml.principal_disbursed_derived,0)) as totalDisbAmt,\nsum(ml.total_outstanding_derived) as OutstandingAmt,\nsum(laa.total_overdue_derived) arrearsAmt,\nIFNULL(laa.overdue_since_date_derived, curdate()) as minOverdueDate,\nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_group c on c.office_id = ounder.id\ninner join m_loan ml on ml.group_id = c.id\ninner join m_loan_arrears_aging laa ON laa.loan_id = ml.id\n#left join m_loan_glim lg on lg.loan_id = ml.id\nWHERE ml.loan_status_id=300\nAND a.id = ${currentUserId}\ngroup by 6)a\ngroup by 1)v\nleft join \n(select sum(a.total) tot,a.arrPeriod from ((select count(*) total,IF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_group c on c.office_id = ounder.id\ninner join m_loan m on m.group_id = c.id\ninner join m_loan_arrears_aging aa on aa.loan_id = m.id\ninner join m_loan_glim lg on lg.loan_id = m.id\nwhere a.id = ${currentUserId}\ngroup by 2)\nunion\n(select count(*),IF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_group c on c.office_id = ounder.id\ninner join m_loan m on m.group_id = c.id\ninner join m_loan_arrears_aging aa on aa.loan_id = m.id and m.loan_type_enum = 2\nwhere a.id = ${currentUserId}\ngroup by 2)\nunion\n(select count(*),IF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), aa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_client c on c.office_id = ounder.id\ninner join m_loan m on m.client_id = c.id\ninner join m_loan_arrears_aging aa on aa.loan_id = m.id and m.loan_type_enum in (1,3)\nwhere a.id = ${currentUserId}\ngroup by 2))a\ngroup by 2)b on b.arrPeriod =v.arrPeriod', NULL, 0, 1, 0);
INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Arrears bucket isloanofficer', 'Table', NULL, 'Loan', 'select a.loanId\n,a.TotalDisbAmt\n,a.OutstandingAmt\n,a.ArrearsAmt\n,a.days\nfrom  (SELECT ml.id loanId, \nIFNULL(ml.principal_disbursed_derived,0) as TotalDisbAmt,\nml.total_outstanding_derived as OutstandingAmt,\nlaa.total_overdue_derived ArrearsAmt,\nIFNULL(laa.overdue_since_date_derived, curdate()) as minOverdueDate,\nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\n,DATEDIFF(CURDATE(), laa.overdue_since_date_derived) days\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_staff s on s.id = a.staff_id\ninner join m_loan ml on ml.loan_officer_id = s.id\ninner join m_loan_arrears_aging laa ON laa.loan_id = ml.id\nWHERE ml.loan_status_id=300\nand a.id = ${currentUserId}\nhaving \ncase when \'${accountNo} \'= \'1-30\' then arrPeriod = \'1 - 30\'\n     when \'${accountNo}\' = \'31-60\' then arrPeriod = \'31 - 60\'\n	  when \'${accountNo}\'= \'61-90\' then arrPeriod = \'61 - 90\' \n	  when \'${accountNo}\' = \'91\' then arrPeriod = \'91+\' end)a', NULL, 0, 1, 0);
INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Arrears bucket notaloanofficer', 'Table', NULL, 'Loan', 'select a.loanId\n,a.TotalDisbAmt\n,a.OutstandingAmt\n,a.ArrearsAmt\n,a.days\nfrom (SELECT ml.id loanId, \nIFNULL(lg.disbursed_amount,ml.principal_disbursed_derived) as totalDisbAmt,\nifnull((lg.total_payble_amount-lg.paid_amount),ml.total_outstanding_derived) as OutstandingAmt,\nlaa.total_overdue_derived arrearsAmt,\nIFNULL(laa.overdue_since_date_derived, curdate()) as minOverdueDate,\nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\n,DATEDIFF(CURDATE(), laa.overdue_since_date_derived) days\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_group c on c.office_id = ounder.id\ninner join m_loan ml on ml.group_id = c.id\ninner join m_loan_arrears_aging laa ON laa.loan_id = ml.id\nleft join m_loan_glim lg on lg.loan_id = ml.id\nWHERE ml.loan_status_id=300\nAND a.id = ${currentUserId}\nhaving \ncase when \'${accountNo}\'= \'1-30\' then arrPeriod = \'1 - 30\'\n     when \'${accountNo}\' = \'31-60\' then arrPeriod = \'31 - 60\'\n	  when \'${accountNo}\'= \'61-90\' then arrPeriod = \'61 - 90\' \n	  when \'${accountNo}\' = \'91\' then arrPeriod = \'91+\' end\nunion\nSELECT ml.id loanId, \nIFNULL(ml.principal_disbursed_derived,0) as totalDisbAmt,\nml.total_outstanding_derived as OutstandingAmt,\nlaa.total_overdue_derived arrearsAmt,\nIFNULL(laa.overdue_since_date_derived, curdate()) as minOverdueDate,\nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 1 AND 30, \'1 - 30\',  \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 31 AND 60, \'31 - 60\', \nIF(DATEDIFF(CURDATE(), laa.overdue_since_date_derived) BETWEEN 61 AND 90, \'61 - 90\', \'91+\'))) AS arrPeriod\n,DATEDIFF(CURDATE(), laa.overdue_since_date_derived) days\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_client c on c.office_id = ounder.id\ninner join m_loan ml on ml.client_id = c.id and ml.loan_type_enum = 1\ninner join m_loan_arrears_aging laa ON laa.loan_id = ml.id\nWHERE ml.loan_status_id=300\nAND a.id = ${currentUserId}\nhaving \ncase when  \'${accountNo}\'= \'1-30\' then arrPeriod = \'1 - 30\'\n     when \'${accountNo}\' = \'31-60\' then arrPeriod = \'31 - 60\'\n	  when \'${accountNo}\'= \'61-90\' then arrPeriod = \'61 - 90\' \n	  when \'${accountNo}\' = \'91\' then arrPeriod = \'91+\' end)a', NULL, 0, 1, 0);
INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Matured loan report notaloanofficer', 'Table', NULL, 'Loan', 'select a.loan_product_id,\na.loan_product_name,\nsum(a.loan_count) as loan_count,\nsum(a.outstanding_amount) as outstanding_amount\n\n from (SELECT \nmpl.id as \'loan_product_id\',\nmpl.name as \'loan_product_name\',\nCOUNT(ml.id) as \'loan_count\',\nSUM(ml.total_outstanding_derived) as \'outstanding_amount\' \n\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_client c on c.office_id = ounder.id\ninner join m_loan ml on ml.client_id = c.id and ml.loan_type_enum = 1\nJOIN  m_product_loan mpl on ml.product_id = mpl.id\n#WHERE ml.loan_status_id=300\nwhere a.id = ${currentUserId}\nand MONTH(ml.expected_maturedon_date) = MONTH(\'${startDate}\')  \n-- here we need to add the case for user\n\nGROUP BY mpl.id\nunion\nSELECT \nmpl.id as \'loan_product_id\',\nmpl.name as \'loan_product_name\',\nCOUNT(ml.id) as \'loan_count\',\nsum(ifnull((lg.total_payble_amount-lg.paid_amount),ml.total_outstanding_derived)) as \'outstanding_amount\'\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_group c on c.office_id = ounder.id\ninner join m_loan ml on ml.group_id = c.id\nJOIN  m_product_loan mpl on ml.product_id = mpl.id\nleft join m_loan_glim lg on lg.loan_id = ml.id\nwhere a.id = ${currentUserId}\nand MONTH(ml.expected_maturedon_date) = MONTH(\'${startDate}\')\nGROUP BY mpl.id)a\ngroup by 1', NULL, 0, 1, 0);
INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Matured loan product level notaloanofficer', 'Table', NULL, 'Loan', 'SELECT \nml.id as \'loan_id\',\nifnull(ml.principal_disbursed_derived,0) \'disbursed_amount\',\nifnull(ml.total_outstanding_derived,0) as \'outstanding_amount\',\nml.expected_maturedon_date\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_client c on c.office_id = ounder.id\ninner join m_loan ml on ml.client_id = c.id and ml.loan_type_enum = 1\nJOIN  m_product_loan mpl on ml.product_id = mpl.id\n#WHERE ml.loan_status_id=300\nwhere a.id = ${currentUserId}\nand mpl.id = \'${loanProductIdonly}\'\nand MONTH(ml.expected_maturedon_date) = MONTH(\'${startDate}\')\nunion\nSELECT \nml.id as \'loan_id\',\nifnull(lg.disbursed_amount,ml.principal_disbursed_derived) \'disbursed_amount\',\nifnull((lg.total_payble_amount-lg.paid_amount),ml.total_outstanding_derived) as \'outstanding_amount\',\nml.expected_maturedon_date\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_group c on c.office_id = ounder.id\ninner join m_loan ml on ml.group_id = c.id\nJOIN  m_product_loan mpl on ml.product_id = mpl.id\nleft join m_loan_glim lg on lg.loan_id = ml.id\nwhere a.id = ${currentUserId}\nand mpl.id = \'${loanProductIdonly}\'\nand MONTH(ml.expected_maturedon_date) = MONTH(\'${startDate}\')', NULL, 0, 1, 0);
INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Matured loan product level isloanofficer', 'Table', NULL, 'Loan', 'SELECT \nml.id as \'loan_id\',\nifnull(ml.principal_disbursed_derived,0) \'disbursed_amount\',\nifnull(ml.total_outstanding_derived,0) as \'outstanding_amount\',\nml.expected_maturedon_date\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_staff s on s.id = a.staff_id\ninner join m_loan ml on ml.loan_officer_id = s.id\nJOIN  m_product_loan mpl on ml.product_id = mpl.id\n#WHERE ml.loan_status_id=300\nwhere a.id = ${currentUserId}\nand mpl.id = \'${loanProductIdonly}\'\nand MONTH(ml.expected_maturedon_date) = MONTH(\'${startDate}\')\n', NULL, 0, 1, 0);
INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Matured loan report isloanofficer', 'Table', NULL, 'Loan', 'select a.loan_product_id,\na.loan_product_name,\nsum(a.loan_count) as loan_count,\nsum(a.outstanding_amount) as outstanding_amount\n\n from (SELECT \nmpl.id as \'loan_product_id\',\nmpl.name as \'loan_product_name\',\nCOUNT(ml.id) as \'loan_count\',\nSUM(ml.total_outstanding_derived) as \'outstanding_amount\' \n\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_staff s on s.id = a.staff_id\ninner join m_client c on c.staff_id = s.id\ninner join m_loan ml on ml.client_id = c.id and ml.loan_type_enum = 1\nJOIN  m_product_loan mpl on ml.product_id = mpl.id\n#WHERE ml.loan_status_id=300\nwhere a.id = ${currentUserId}\nand MONTH(ml.expected_maturedon_date) = MONTH(\'${startDate}\')  \n-- here we need to add the case for user\n\nGROUP BY mpl.id\nunion\nSELECT \nmpl.id as \'loan_product_id\',\nmpl.name as \'loan_product_name\',\nCOUNT(ml.id) as \'loan_count\',\nsum(ifnull((lg.total_payble_amount-lg.paid_amount),ml.total_outstanding_derived)) as \'outstanding_amount\'\nFROM m_appuser a\n\ninner join  m_office o on o.id = a.office_id\nINNER JOIN m_office ounder ON ounder.hierarchy \nLIKE CONCAT(o.hierarchy, \'%\')\nAND ounder.hierarchy like CONCAT(\'.\', \'%\')\ninner join m_staff s on s.id = a.staff_id\ninner join m_group c on c.staff_id = s.id\ninner join m_loan ml on ml.group_id = c.id\nJOIN  m_product_loan mpl on ml.product_id = mpl.id\nleft join m_loan_glim lg on lg.loan_id = ml.id\nwhere a.id = ${currentUserId}\nand MONTH(ml.expected_maturedon_date) = MONTH(\'${startDate}\')\nGROUP BY mpl.id)a\ngroup by 1', NULL, 0, 1, 0);
INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Client Status report isloanofficer', 'Table', NULL, 'Loan', 'SELECT \ncenter.id as \'center_id\',\ncenter.display_name as \'center_name\', \ngroups.id as \'group_id\',\ngroups.display_name as \'group_name\',\ncl.id as \'client_id\',\ncl.display_name as \'client_name\',\ncl.account_no as \'client_account_no\',\n\nCASE WHEN loan.loan_status_id = 300\n     THEN \'Active\'\n     \n     WHEN cl.status_enum = 300\n     AND (count(loan.id) < 1)\n     THEN \'Inactive\'\n   \n   WHEN cl.status_enum = 300\n   AND COUNT(loan.id) > 0\n   AND loan.loan_status_id NOT IN (300) \n   AND YEAR(loan.closedon_date) < YEAR(CURDATE())\n   \n   THEN  \'Dropout\'\n \n   END  AS \'client_status\'\n   \n\nFROM m_appuser usr \nJOIN m_staff staff on usr.staff_id = staff.id\nJOIN m_client cl on cl.staff_id = staff.id\nleft JOIN m_loan loan on cl.id = loan.client_id\nleft JOIN m_group_client mapping on mapping.client_id = cl.id\nleft JOIN m_group groups on groups.id = mapping.group_id\nleft JOIN m_group center on center.id = groups.parent_id\n\n\nwhere usr.id = ${currentUserId}\n\nGROUP BY cl.id\nhaving `client_status` is not null\n', NULL, 0, 1, 0);
INSERT INTO `stretchy_report` (`report_name`, `report_type`, `report_subtype`, `report_category`, `report_sql`, `description`, `core_report`, `use_report`, `track_usage`) VALUES ('Client Status report isnotloanofficer', 'Table', NULL, 'Loan', 'SELECT \ncenter.id as \'center_id\',\ncenter.display_name as \'center_name\', \ngroups.id as \'group_id\',\ngroups.display_name as \'group_name\',\ncl.id as \'client_id\',\ncl.display_name as \'client_name\',\ncl.account_no as \'client_account_no\',\n\nCASE WHEN loan.loan_status_id = 300\n     THEN \'Active\'\n     \n     WHEN cl.status_enum = 300\n     AND (count(loan.id) < 1)\n     THEN \'Inactive\'\n   \n   WHEN cl.status_enum = 300\n   AND COUNT(loan.id) > 0\n   AND loan.loan_status_id NOT IN (300) \n   AND YEAR(loan.closedon_date) < YEAR(CURDATE())\n   \n   THEN  \'Dropout\'\n \n   END  AS \'client_status\'\n   \n\nFROM m_appuser usr \nJOIN m_client cl on cl.office_id = usr.office_id\nleft JOIN m_loan loan on cl.id = loan.client_id\nleft JOIN m_group_client mapping on mapping.client_id = cl.id\nleft JOIN m_group groups on groups.id = mapping.group_id\nleft JOIN m_group center on center.id = groups.parent_id\n\n\nwhere  usr.id = 3\n\nGROUP BY cl.id\nhaving `client_status` is not null\n', NULL, 0, 1, 0);

#REPORTPARAMETER

INSERT INTO `stretchy_report_parameter` (`report_id`, `parameter_id`, `report_parameter_name`) 
VALUES ((SELECT id FROM stretchy_report WHERE report_name = 'Arrears bucket isloanofficer'), (SELECT id FROM stretchy_parameter WHERE parameter_name = 'selectAccount'), NULL);


INSERT INTO `stretchy_report_parameter` (`report_id`, `parameter_id`, `report_parameter_name`) 
VALUES ((SELECT id FROM stretchy_report WHERE report_name = 'Matured loan report notaloanofficer'), (SELECT id FROM stretchy_parameter WHERE parameter_name = 'startDateSelect'), NULL);


INSERT INTO `stretchy_report_parameter` (`report_id`, `parameter_id`, `report_parameter_name`) 
VALUES ((SELECT id FROM stretchy_report WHERE report_name = 'Matured loan product level notaloanofficer'), (SELECT id FROM stretchy_parameter WHERE parameter_name = 'startDateSelect'), NULL);


INSERT INTO `stretchy_report_parameter` (`report_id`, `parameter_id`, `report_parameter_name`) 
VALUES ((SELECT id FROM stretchy_report WHERE report_name = 'Matured loan product level notaloanofficer'), (SELECT id FROM stretchy_parameter WHERE parameter_name = 'loanProductId'), NULL);

#PERMISSIONS

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'READ_Arrears Summary isloanofficer', 'Arrears Summary isloanofficer', 'READ', 0);

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'READ_Arrears Summary notaloanofficer', 'Arrears Summary notaloanofficer', 'READ', 0);

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'READ_Arrears bucket isloanofficer', 'Arrears bucket isloanofficer', 'READ', 0);

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'READ_Arrears bucket notaloanofficer', 'Arrears bucket notaloanofficer', 'READ', 0);

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'READ_Matured loan report notaloanofficer', 'Matured loan report notaloanofficer', 'READ', 0);

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'Matured loan product level notaloanofficer', 'Matured loan product level notaloanofficer', 'READ', 0);

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'READ_Matured loan product level isloanofficer', 'Matured loan product level isloanofficer', 'READ', 0);

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'READ_Matured loan report isloanofficer', 'Matured loan report isloanofficer', 'READ', 0);

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'READ_Client Status report isloanofficer', 'Client Status report isloanofficer', 'READ', 0);

INSERT INTO `m_permission` (`grouping`, `code`, `entity_name`, `action_name`, `can_maker_checker`) VALUES ('MobileClient(Field Officer)', 'READ_Client Status report isnotloanofficer', 'Client Status report isnotloanofficer', 'READ', 0);
