UPDATE stretchy_report 
SET report_sql =  "select a.*,sum(ifnull(a.TotalLoantrxnAmount + a.TotalSavingstrxnAmount,0)) 'total' \n	from\n	(select  \n	  c.id as id,\n	 '${reciptNo}' ReceiptNo,\n	  o.name officeName,c.display_name ClientName,c.mobile_no mobileNo,\n	  c.firstname firstName,\n	  round((ifnull( (\n	  select sum(mlt.amount)\n		\n		from m_client mc \n		join m_loan ml on mc.id = ml.client_id\n		join m_loan_transaction mlt on ml.id = mlt.loan_id and mlt.is_reversed = 0\n		and date(mlt.created_date) = curdate()\n		join m_payment_detail  mpd on mlt.payment_detail_id = mpd.id\n		where mpd.receipt_number = '${reciptNo}'\n		and mc.id = '${clientId}'\n	   and mlt.amount is not null\n	  ),0)),0)TotalLoantrxnAmount,\n\n	round((ifnull((select sum(msat.amount)\n		\n		from m_client mc \n		join m_savings_account msa on mc.id = msa.client_id\n		join m_savings_account_transaction msat on msa.id = msat.savings_account_id \n		and msat.is_reversed = 0\n		and date(msat.created_date) = curdate()\n		join m_payment_detail  mpd on msat.payment_detail_id = mpd.id\n		where mpd.receipt_number = '${reciptNo}'\n		and mc.id = '${clientId}'\n	   and msat.amount is not null\n	   and msat.transaction_type_enum != 7),0)),0)TotalSavingstrxnAmount\n\n\n	from m_office o\n	left join m_client c on o.id = c.office_id\n\n\n	where c.id = '${clientId}'\n	group by c.id) a"
WHERE report_name = 'Client Payments';

UPDATE stretchy_report 
SET report_sql =  "(\r\n  SELECT \r\n\r\n       mc.id, \r\n		 mc.firstname, \r\n		 mc.middlename as middlename,\r\n       mc.lastname, \r\n		 mc.display_name as FullName, \r\n		 mc.mobile_no as mobileNo, \r\n		 mc.group_name as GroupName, \r\n		 mo.name as officename, \r\n		 ml.id as loanId,\r\n		 ml.account_no as accountnumber, \r\n		 ml.principal_amount_proposed as loanamount, \r\n		 ml.annual_nominal_interest_rate as annualinterestrate, \r\n                                 mc.firstname as loneeName\r\n	 FROM m_office mo \r\n	 JOIN m_office ounder ON ounder.hierarchy LIKE CONCAT(mo.hierarchy, '%') \r\n	 AND ounder.hierarchy like CONCAT('.', '%') \r\n         LEFT JOIN ( select  ml.id as loanId,  ifnull(mc.id,mc2.id) as id,  \r\n                    ifnull(mc.firstname,mc2.firstname) as firstname,  \r\n						  ifnull(mc.middlename,ifnull(mc2.middlename,(''))) as middlename,  \r\n						  ifnull(mc.lastname,mc2.lastname) as lastname,  \r\n						  ifnull(mc.display_name,mc2.display_name) as display_name,  \r\n						  ifnull(mc.status_enum,mc2.status_enum) as status_enum, \r\n						  ifnull(mc.mobile_no,mc2.mobile_no) as mobile_no, \r\n						  ifnull(mg.office_id,mc2.office_id) as office_id, \r\n						  ifnull(mg.staff_id,mc2.staff_id) as staff_id, \r\n						  mg.id as group_id, mg.display_name as group_name \r\n				 from m_loan ml \r\n				 left join m_group mg on mg.id = ml.group_id \r\n				 left join m_group_client mgc on mgc.group_id = mg.id \r\n				 left join m_client mc on mc.id = mgc.client_id \r\n				 left join m_client mc2 on mc2.id = ml.client_id \r\n				 order by loanId \r\n\r\n           ) mc on mc.office_id = ounder.id  \r\n	left join m_loan ml on ml.id = mc.loanId \r\n	\r\n	\r\n	WHERE mc.status_enum = 300 \r\n	and mc.mobile_no is not null \r\n	and (mo.id = ${officeId} or ${officeId} = -1) \r\n	and (mc.staff_id = ${loanOfficerId} or ${loanOfficerId} = -1) \r\n	and (ml.id = ${loanId} or ${loanId} = -1)and (mc.id = ${clientId} or ${clientId} = -1)\r\n	and (mc.group_id = ${groupId} or ${groupId} = -1)\r\n	and (ml.loan_type_enum = ${loanType} or ${loanType} = -1)\r\n	\r\n	GROUP BY mc.id \r\n	\r\n	)\r\n	\r\n	\r\n	\r\n   UNION \r\n	\r\n	\r\n	\r\n	( select \r\n	\r\n	                 extGuarantor.id, \r\n		 extGuarantor.firstname, \r\n		 extGuarantor.middlename as middlename,\r\n                                 extGuarantor.lastname, \r\n		 extGuarantor.display_name as FullName, \r\n		 extGuarantor.mobile_no as mobileNo, \r\n		 '' as GroupName, \r\n		 ounder.name as officename, \r\n		 ml.id as loanId,\r\n		 ml.account_no as accountnumber, \r\n		 ml.principal_amount_proposed as loanamount, \r\n		 ml.annual_nominal_interest_rate as annualinterestrate, \r\n	                mc.firstname as loneeName \r\n	\r\n	from m_office mo \r\n               JOIN m_office ounder ON ounder.hierarchy LIKE CONCAT(mo.hierarchy, '%') \r\n	     AND ounder.hierarchy like CONCAT('.', '%') \r\n	join m_client mc on mc.office_id = ounder.id\r\n	join m_loan ml on ml.client_id = mc.id\r\n	join m_guarantor mg on mg.loan_id = ml.id \r\n	join m_client extGuarantor on extGuarantor.id = mg.entity_id and extGuarantor.id != mc.id\r\n	\r\n	where extGuarantor.status_enum = 300 \r\n	and extGuarantor.mobile_no is not null\r\n	and (mo.id = ${officeId} or ${officeId} = -1) \r\n	and (extGuarantor.staff_id = ${loanOfficerId} or ${loanOfficerId} = -1) \r\n	and (ml.loan_type_enum = ${loanType} or ${loanType} = -1)\r\n	and (ml.id = ${loanId} or ${loanId} = -1)and (mc.id = ${clientId} or ${clientId} = -1)\r\n	\r\n	group by mc.id\r\n	 \r\n	)\r\n"
WHERE report_name = 'Loan Approved';

UPDATE stretchy_report 
SET report_sql =  "select a.client_name,a.branch_name,a.due_date,a.mobile_no as mobileNo,a.loan_id ,a.client_id as id, a.productshort_name \nfrom\n(select c.display_name as client_name,o.name as branch_name, lrc.duedate as due_date,c.mobile_no as mobile_no,\n l.id as loan_id,c.id as client_id,\n mp.short_name as productShort_name,\n if (((ifnull(lrc.principal_amount,0)+ ifnull(lrc.interest_amount,0))>\n     (ifnull(lrc.principal_completed_derived,0)+ifnull(lrc .interest_completed_derived,0))),\n	  (datediff(lrc.duedate,'${startDate}')),null) as days,\n	  max(mlt.transaction_date) as last_txn_date,\n	  ifnull(mlaa.total_overdue_derived,0) as arrears\n	   \n      FROM m_office o \n		JOIN m_client c on c.office_id = o.id\n		JOIN m_loan l on l.client_id = c.id and l.loan_status_id = 300\n		JOIN m_loan_repayment_schedule lrc on lrc.loan_id = l.id and lrc.completed_derived = 0\n		join m_loan_transaction mlt on mlt.loan_id = l.id and mlt.is_reversed = 0\n		JOIN officedetails od on od.office_id = o.id and od.sms_enabled = true\n		inner join m_product_loan mp on mp.id= l.product_id\n		left join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id\n     \n	   WHERE datediff(lrc.duedate,curdate()) between ${fromX} and ${toY}\n		and case when ${officeId}=0 then\n         1=1\n         else \n         o.id = ${officeId}\n         end\n          \n          \n       and case when (    select \n                                count(esd.mobile_no)\n						        from sms_messages_outbound esd\n						        JOIN sms_campaign cam on cam.id = esd.campaign_id\n						        JOIN stretchy_report rp on rp.id = cam.report_id\n						        where (esd.status_enum = 200 OR esd.status_enum =300)\n						        and rp.report_name = 'Loan Repayment Reminders'\n						        and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}\n	     \n		               ) >0 then\n		\n		 c.mobile_no not in (\n							select esd.mobile_no\n						        from sms_messages_outbound esd\n						        JOIN sms_campaign cam on cam.id = esd.campaign_id\n						        JOIN stretchy_report rp on rp.id = cam.report_id\n						        where (esd.status_enum = 200 OR esd.status_enum =300)\n						        and rp.report_name = 'Loan Repayment Reminders'\n						        and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}\n							group by esd.mobile_no\n		   				)\n				else\n				1\n			  end    \n             \n          \n          \n	  group by l.id\n	  \n	  \n	  \n	  UNION \n	  \n	  \n	  select c.display_name as client_name,o.name as branch_name, lrc.duedate as due_date,c.mobile_no as mobile_no,\n l.id as loan_id,c.id as client_id,\n mp.short_name as productShort_name,\n if (((ifnull(lrc.principal_amount,0)+ ifnull(lrc.interest_amount,0))>\n     (ifnull(lrc.principal_completed_derived,0)+ifnull(lrc .interest_completed_derived,0))),\n	  (datediff(lrc.duedate,'${startDate}')),null) as days,\n	  max(mlt.transaction_date) as last_txn_date,\n	  ifnull(mlaa.total_overdue_derived,0) as arrears\n	   \n     FROM m_office o \n		JOIN m_client c on c.office_id = o.id\n		JOIN m_loan l on l.client_id = c.id and l.loan_status_id = 300\n		JOIN m_loan_repayment_schedule lrc on lrc.loan_id = l.id and lrc.completed_derived = 0\n		join m_loan_transaction mlt on mlt.loan_id = l.id and mlt.is_reversed = 0\n		JOIN officedetails od on od.office_id = o.id and od.sms_enabled = true\n		inner join m_product_loan mp on mp.id= l.product_id\n		left join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id\n     \n	   WHERE datediff(lrc.duedate,curdate()) between ${fromX} and ${toY}\n		and case when ${officeId}=0 then\n         1=1\n         else \n         o.id = ${officeId}\n         end\n      \n		and case when (  select \n					        count(esd.mobile_no)\n						        from sms_messages_outbound esd\n						        JOIN sms_campaign cam on cam.id = esd.campaign_id\n						        JOIN stretchy_report rp on rp.id = cam.report_id\n						        where (esd.status_enum = 400)\n						        and rp.report_name = 'Loan Repayment Reminders'\n						        and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}\n	    \n		  					) >0 then\n		\n		 c.mobile_no in (\n							select esd.mobile_no\n						        from sms_messages_outbound esd\n						        JOIN sms_campaign cam on cam.id = esd.campaign_id\n						        JOIN stretchy_report rp on rp.id = cam.report_id\n						        where (esd.status_enum = 400)\n						        and rp.report_name = 'Loan Repayment Reminders'\n						        and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}\n							group by esd.mobile_no\n		  					 )\n				else\n				0\n			  end    \n          \n          \n	  group by l.id\n	  \n	  \n	  \n	  \n	  \n  )a\n\n where\n case when extract(year_month from (a.last_txn_date)) = extract(year_month from ('${startDate}'))\n		    then\n	          a.arrears > 0\n	   else \n	    1\n end and a.days between ${fromX} and ${toY}\n \n       \n group by a.loan_id "
WHERE report_name = 'Loan Repayment Reminders';

UPDATE stretchy_report 
SET report_sql =  "select  a.client_name,\n        a.branch_name,\n		a.overdue_amount,\n		a.mobile_no as mobileNo,\n		a.loan_id,\n		a.client_id as id,\n		a.productshort_Name,\n        a.month \nfrom\n    ( select c.firstname as client_name,\n	          o.name as branch_name, c.mobile_no as mobile_no,\n				 date_format(max(mlt.transaction_date),'%M') as month,\n				 max(mlt.transaction_date) as last_txn_date,\n             c.id as client_id,l.id as loan_id,\n				 mp.short_name as productshort_Name,\n             round(ifnull(mlaa.total_overdue_derived,0),0) as overdue_amount,\n            if (((lrc.principal_amount+lrc.interest_amount)>(ifnull(lrc.principal_completed_derived,0)\n				   +ifnull(lrc.interest_completed_derived,0))),\n					(datediff('${startDate}',lrc.duedate)),null) as days \n \n     from m_client c\n	  inner join m_loan l on c.id=l.client_id and l.loan_status_id=300 \n	  inner join m_loan_transaction mlt on l.id = mlt.loan_id and mlt.is_reversed = 0\n     inner join m_product_loan mp on mp.id=l.product_id\n     inner join m_loan_repayment_schedule lrc on lrc.loan_id=l.id\n     inner join m_office o on c.office_id=o.id\n     inner join OfficeDetails od on od.office_id=o.id and od.sms_enabled=true\n     left join m_loan_arrears_aging mlaa on l.id = mlaa.loan_id\n   \n     where \n     \n     \n     case when ${officeId} =0 then\n         1=1\n         else \n         o.id = ${officeId}\n         end\n	  \n	  \n	  and case when (select \n						count(esd.mobile_no)\n						from sms_messages_outbound esd\n						JOIN sms_campaign cam on cam.id = esd.campaign_id\n						JOIN stretchy_report rp on rp.id = cam.report_id\n						where (esd.status_enum = 200 OR esd.status_enum =300)\n						and rp.report_name = 'Loan First Overdue Repayment Reminder'\n						and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}\n		   			) >0 then\n		\n		 				c.mobile_no not in (\n							  select esd.mobile_no\n						        from sms_messages_outbound esd\n						        JOIN sms_campaign cam on cam.id = esd.campaign_id\n						        JOIN stretchy_report rp on rp.id = cam.report_id\n						        where (esd.status_enum = 200 OR esd.status_enum =300)\n						        and rp.report_name = 'Loan First Overdue Repayment Reminder'\n						        and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}\n							group by esd.mobile_no\n		  				 )\n				else\n					1\n	  			end    \n         \n	  			group by lrc.loan_id\n	  \n	  \n	  \n	  UNION \n	  \n	  \n	  select c.firstname as client_name,\n	          o.name as branch_name, c.mobile_no as mobile_no,\n				 date_format(max(mlt.transaction_date),'%M')  as month,\n				 'No_Date' as last_txn_date,\n             c.id as client_id,l.id as loan_id,\n				 mp.short_name as productshort_Name,\n             round(ifnull(mlaa.total_overdue_derived,0),0) as overdue_amount,\n            if (((lrc.principal_amount+lrc.interest_amount)>(ifnull(lrc.principal_completed_derived,0)\n				   +ifnull(lrc.interest_completed_derived,0))),\n					(datediff('${startDate}',lrc.duedate)),null) as days \n \n     from m_client c\n	  inner join m_loan l on c.id=l.client_id and l.loan_status_id=300 \n	  inner join m_loan_transaction mlt on l.id = mlt.loan_id and mlt.is_reversed = 0\n     inner join m_product_loan mp on mp.id=l.product_id\n     inner join m_loan_repayment_schedule lrc on lrc.loan_id=l.id\n     inner join m_office o on c.office_id=o.id\n     inner join OfficeDetails od on od.office_id=o.id  and od.sms_enabled=true\n     left join m_loan_arrears_aging mlaa on l.id = mlaa.loan_id\n    \n     where\n      case when ${officeId} =0 then\n         1=1\n         else \n         o.id = ${officeId}\n         end\n         \n     and case when (  select \n					        count(esd.mobile_no)\n						        from sms_messages_outbound esd\n						        JOIN sms_campaign cam on cam.id = esd.campaign_id\n						        JOIN stretchy_report rp on rp.id = cam.report_id\n						        where (esd.status_enum = 400)\n						        and rp.report_name = 'Loan First Overdue Repayment Reminder'\n						        and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}\n	    \n		             ) > 0 \n						 \n						 then\n		\n		           c.mobile_no in (\n									select esd.mobile_no\n									from sms_messages_outbound esd\n									JOIN sms_campaign cam on cam.id = esd.campaign_id\n									JOIN stretchy_report rp on rp.id = cam.report_id\n									where (esd.status_enum = 400)\n									and rp.report_name = 'Loan First Overdue Repayment Reminder'\n									and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}\n									group by esd.mobile_no\n		   							  )\n		       else\n	      	 0\n	          end\n   \n    \n    \n	  group by lrc.loan_id\n	  \n	  \n	  )a\n\nwhere  a.overdue_amount > 0\n AND datediff('${startDate}',a.last_txn_date) = 30 or a.last_txn_date = 'No_Date'"
WHERE report_name = 'Loan First Overdue Repayment Reminder';

UPDATE stretchy_report 
SET report_sql =  "select a.client_name, a.branch_name, a.overdue_amount, a.mobile_no as mobileNo, a.loan_id, a.client_id as id,a.productshort_Name, a.month from (-- normal case: where the last loan repayment was before 60 days then should recived the -- second reminder\n  select c.firstname as client_name,o.name as branch_name, c.mobile_no as mobile_no,date_format(max(mlt.transaction_date),'%M') as month,date_format(lrc.duedate,'%M-%Y')as month_year,max(mlt.transaction_date) as last_txn_date,c.id as client_id,l.id as loan_id,mp.short_name as productshort_Name,lrc.duedate as duedate,round(ifnull(mlaa.total_overdue_derived,0),0) as overdue_amount, if (((lrc.principal_amount+lrc.interest_amount)>(ifnull(lrc.principal_completed_derived,0)+ ifnull(lrc.interest_completed_derived,0))), (datediff('${startDate}', date_add(date_add(makedate(extract(year from lrc.duedate),extract(day from lrc.duedate)), interval extract(month from lrc.duedate) month),interval 5 day))),null) as days from m_client c  inner join m_loan l on c.id=l.client_id and l.loan_status_id=300 inner join m_loan_transaction mlt on l.id = mlt.loan_id and mlt.is_reversed = 0 inner join m_product_loan mp on mp.id=l.product_id inner join m_loan_repayment_schedule lrc on lrc.loan_id=l.id inner join m_office o on c.office_id=o.id inner join officedetails od on od.office_id=o.id and od .sms_enabled=true left join m_loan_arrears_aging mlaa on l.id = mlaa.loan_id where case when ${officeId} =0 then 1=1 else o.id = ${officeId} end and case when (select count(esd.mobile_no) from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 200 OR esd.status_enum =300) and rp.report_name = 'Loan Second Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}) >0 then c.mobile_no not in ( select esd.mobile_no from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 200 OR esd.status_enum =300) and rp.report_name = 'Loan Second Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} group by esd.mobile_no ) else 1 end group by lrc.loan_id UNION select c.firstname as client_name,o.name as branch_name, c.mobile_no as mobile_no, date_format(max(mlt.transaction_date),'%M-%Y') as month, date_format(lrc.duedate,'%M')as month_year, 'No_Date' as last_txn_date, c.id as client_id,l.id as loan_id, mp.short_name as productshort_Name, lrc.duedate as duedate, round(ifnull(mlaa.total_overdue_derived,0),0) as overdue_amount, if (((lrc.principal_amount+lrc.interest_amount)>(ifnull(lrc.principal_completed_derived,0)+ ifnull(lrc.interest_completed_derived,0))), (datediff('${startDate}', date_add(date_add(makedate(extract(year from lrc.duedate),extract(day from lrc.duedate)), interval extract(month from lrc.duedate) month),interval 5 day))),null) as days from m_client c inner join m_loan l on c.id=l.client_id and l.loan_status_id=300 inner join m_loan_transaction mlt on l.id = mlt.loan_id and mlt.is_reversed = 0 inner join m_product_loan mp on mp.id=l.product_id inner join m_loan_repayment_schedule lrc on lrc.loan_id=l.id inner join m_office o on c.office_id=o.id inner join officedetails od on od.office_id=o.id and od .sms_enabled=true left join m_loan_arrears_aging mlaa on l.id = mlaa.loan_id where case when ${officeId} =0 then 1=1 else o.id = ${officeId} end and  case when (select count(esd.mobile_no) from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = 'Loan Second Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} ) >0 then c.mobile_no in (select esd.mobile_no from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = 'Loan Second Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} group by esd.mobile_no ) else 0 end group by lrc.loan_id )a where  a.overdue_amount > 0  and  datediff('${startDate}',last_txn_date) = 60 or last_txn_date = 'No_Date' group by a.mobile_no"
WHERE report_name = 'Loan Second Overdue Repayment Reminder';

UPDATE stretchy_report 
SET report_sql =  "select a.client_name, a.Guarantor_name, a.Guarantor_Branch, a.client_mobile_no, a.loan_id, a.client_id as id,productshort_Name, a.Guarantor_mobile_no as mobileNo from (select max(mlt.transaction_date) as last_txn_date,cl.firstname as client_name ,ifnull(go.firstname,concat(gu.firstname,'',gu.lastname)) as Guarantor_name\n,ifnull(o.name,'NA ') as Guarantor_Branch\n,ifnull(go.mobile_no,gu.mobile_number) as Guarantor_mobile_no\n,co.name as Client_Branch\n,ifnull(cl.mobile_no,'NA') as client_mobile_no,cl.id as client_id,l.id as loan_id,mp.short_name as productshort_Name,ifnull(sum(mlaa.total_overdue_derived),0) overdueAmount from m_loan l inner join m_loan_transaction mlt on l.id = mlt.loan_id and mlt.is_reversed = 0\ninner join m_product_loan mp on mp.id=l.product_id inner join m_client cl on cl.id=l.client_id inner join m_guarantor gu on gu.loan_id=l.id inner join m_guarantor_funding_details gf on gu.id = gf.guarantor_id\nleft join m_client go on go.id=gu.entity_id\nleft join m_office o on o.id=go.office_id\nleft join m_office co on co.id=cl.office_id\ninner join officedetails od on od.office_id=co.id left join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id\nwhere l.loan_status_id=300\nand od.sms_enabled=true\nand gf.status_enum = 100\nand case when ${officeId} =0 then 1=1 else o.id = ${officeId} end and case when ( select count(esd.mobile_no) from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 200 OR esd.status_enum =300) and rp.report_name = 'Loan Third Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} ) >0 then go.mobile_no not in (select esd.mobile_no from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 200 OR esd.status_enum =300) and rp.report_name = 'Loan Third Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} group by esd.mobile_no) else 1 end group by gu.id\n\n\n  UNION select 'No_Date' as last_txn_date\n,cl.firstname as client_name\n,ifnull(go.firstname,concat(gu.firstname,'',gu.lastname)) as Guarantor_name\n,ifnull(o.name,'NA ') as Guarantor_Branch\n,ifnull(go.mobile_no,gu.mobile_number) as Guarantor_mobile_no,co.name as Client_Branch\n,ifnull(cl.mobile_no,'NA') as client_mobile_no\n,cl.id as client_id,l.id as loan_id,mp.short_name as productshort_Name, \nifnull(sum(mlaa.total_overdue_derived),0) overdueAmount from m_loan l\ninner join m_loan_transaction mlt on l.id = mlt.loan_id and mlt.is_reversed = 0\ninner join m_product_loan mp on mp.id=l.product_id inner join m_client cl on cl.id=l.client_id \ninner join m_guarantor gu on gu.loan_id=l.id and gu.is_active = true\ninner join m_guarantor_funding_details gf on gu.id = gf.guarantor_id and gf.status_enum = 100\nleft join m_client go on go.id=gu.entity_id\nleft join m_office o on o.id=go.office_id left join m_office co on co.id=cl.office_id inner join officedetails od on od.office_id=co.id and od.sms_enabled=true\nleft join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id\nwhere case when ${officeId} =0 then 1=1 else  o.id = ${officeId} end and case when (select count(esd.mobile_no) from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = 'Loan Third Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} ) >0 then go.mobile_no in ( select esd.mobile_no from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = 'Loan Third Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} group by esd.mobile_no ) else 0 end group by gu.id  )a where  a.overdueAmount > 0 and  datediff('${startDate}',a.last_txn_date) = 90 or a.last_txn_date = 'No_Date' "
WHERE report_name = 'Loan Third Overdue Repayment Reminder';

UPDATE stretchy_report 
SET report_sql =  "select a .client_name, a.Guarantor_name, a.Guarantor_Branch,a.client_mobile_no, a.loan_id, a.client_id as id,a.productshort_Name,a.Guarantor_mobile_no as mobileNo from (select date_format(lrc.duedate,'%M-%Y')as month_year,max(mlt.transaction_date) as last_txn_date,cl.firstname as client_name ,ifnull(go.firstname,concat(gu.firstname,'',gu.lastname)) as Guarantor_name ,ifnull(o.name,'NA ') as Guarantor_Branch\n ,ifnull(go.mobile_no,gu.mobile_number) as Guarantor_mobile_no\n ,co.name as Client_Branch ,ifnull(cl.mobile_no,'NA ') as client_mobile_no ,min(lrc.duedate)as mindate\n ,lrc.duedate as duedate,\n cl.id as client_id,l.id as loan_id,mp.short_name as productshort_Name, if (((lrc.principal_amount+lrc.interest_amount)>(ifnull(lrc.principal_completed_derived,0) +ifnull(lrc.interest_completed_derived,0))), (datediff('${startDate}',date_add(date_add(makedate(extract(year from lrc.duedate),extract(day from lrc.duedate)) ,interval extract(month from lrc.duedate) +2 month),interval 5 day))),null) as days,\n  ifnull(sum(mlaa.total_overdue_derived),0) as overdueAmount from m_loan l inner join m_loan_transaction mlt on l.id = mlt.loan_id and mlt.is_reversed = 0 inner join m_product_loan mp on mp.id=l.product_id\n inner join m_client cl on cl.id=l.client_id \n inner join m_guarantor gu on gu.loan_id=l.id\n inner join m_guarantor_funding_details gf on gu.id = gf.guarantor_id\n inner join m_loan_repayment_schedule lrc on lrc.loan_id=l.id\n left join m_client go on go.id=gu.entity_id\n left join m_office o on o.id=go.office_id\n left join m_office co on co.id=cl.office_id\n inner join officedetails od on od.office_id=co.id join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id where lrc.completed_derived=0 and  gf.status_enum = 100\n and l.loan_status_id=300 and od.sms_enabled=true\n and case when ${officeId} =0 then 1=1 else o.id = ${officeId} end and case when (select count(esd.mobile_no) from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 200 OR esd.status_enum =300) and rp.report_name = 'Loan Fourth Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY}) >0 then go.mobile_no not in ( select esd.mobile_no from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 200 OR esd.status_enum =300) and rp.report_name = 'Loan Fourth Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} group by esd.mobile_no ) else 1 end group by gu.id UNION select date_format(lrc.duedate,'%M-%Y')as month_year, 'No_Date' as last_txn_date,\n  cl.firstname as client_name\n ,ifnull(go.firstname,concat(gu.firstname,'',gu.lastname)) as Guarantor_name\n ,ifnull(o.name,'NA ') as Guarantor_Branch ,ifnull(go.mobile_no,gu.mobile_number) as Guarantor_mobile_no ,co.name as Client_Branch ,ifnull(cl.mobile_no,'NA ') as client_mobile_no ,min(lrc.duedate)as mindate ,lrc.duedate as duedate, cl.id as client_id,l.id as loan_id,mp.short_name as productshort_Name, if (((lrc.principal_amount+lrc.interest_amount)>(ifnull(lrc.principal_completed_derived,0)\n  +ifnull(lrc.interest_completed_derived,0))), (datediff('${startDate}',date_add(date_add(makedate(extract(year from lrc.duedate),extract(day from lrc.duedate)) ,interval extract(month from lrc.duedate) +2 month),interval 5 day))),null) as days,\n  \n  ifnull(sum(mlaa.total_overdue_derived),0) as overdueAmount from m_loan l\n inner join m_loan_transaction mlt on l.id = mlt.loan_id and mlt.is_reversed = 0\n inner join m_product_loan mp on mp.id=l.product_id\n inner join m_client cl on cl.id=l.client_id \n inner join m_guarantor gu on gu.loan_id=l.id\n inner join m_guarantor_funding_details gf on gu.id = gf.guarantor_id\n inner join m_loan_repayment_schedule lrc on lrc.loan_id=l.id left join m_client go on go.id=gu.entity_id left join m_office o on o.id=go.office_id left join m_office co on co.id=cl.office_id\n inner join officedetails od on od.office_id=co.id  and od.sms_enabled=true\n join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id\n where gf.status_enum = 100 and l.loan_status_id=300 and case when ${officeId} =0 then 1=1 else o.id = ${officeId} end and case when (select count(esd.mobile_no) from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = 'Loan Fourth Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} ) >0 then go.mobile_no in ( select esd.mobile_no from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = 'Loan Fourth Overdue Repayment Reminder' and DATEDIFF('${startDate}',esd.submittedon_date) between ${fromX} and ${toY} group by esd.mobile_no ) else 0 end group by gu.id)a where a.overdueAmount > 0 and datediff('${startDate}',a.last_txn_date) = 120 or a.last_txn_date = 'No_Date'"
WHERE report_name = 'Loan Fourth Overdue Repayment Reminder';

UPDATE stretchy_report 
SET report_sql =  "select ml.id as loanId,mc.id, mc.firstname, ifnull(mc.middlename,'') as middlename, mc.lastname, mc.display_name as FullName, mobile_no as mobileNo, mc.group_name as GroupName, round(ml.principal_amount, ml.currency_digits) as LoanAmount, round(ml.`total_outstanding_derived`, ml.currency_digits) as LoanOutstanding,\nml.`account_no` as LoanAccountId, round(mlt.amountPaid, ml.currency_digits) as repaymentAmount, mo.name as branch \nFROM m_office mo\nJOIN m_office ounder ON ounder.hierarchy LIKE CONCAT(mo.hierarchy, '%')\nAND ounder.hierarchy like CONCAT('.', '%')\nLEFT JOIN (\n select \n ml.id as loanId, \n ifnull(mc.id,mc2.id) as id, \n ifnull(mc.firstname,mc2.firstname) as firstname, \n ifnull(mc.middlename,ifnull(mc2.middlename,(''))) as middlename, \n ifnull(mc.lastname,mc2.lastname) as lastname, \n ifnull(mc.display_name,mc2.display_name) as display_name, \n ifnull(mc.status_enum,mc2.status_enum) as status_enum,\n ifnull(mc.mobile_no,mc2.mobile_no) as mobile_no,\n ifnull(mg.office_id,mc2.office_id) as office_id,\n ifnull(mg.staff_id,mc2.staff_id) as staff_id,\n mg.id as group_id, \nmg.display_name as group_name\n from\n m_loan ml\n left join m_group mg on mg.id = ml.group_id\n left join m_group_client mgc on mgc.group_id = mg.id\n left join m_client mc on mc.id = mgc.client_id\n left join m_client mc2 on mc2.id = ml.client_id\n order by loanId\n ) mc on mc.office_id = ounder.id\nright join m_loan as ml on mc.loanId = ml.id\nright join(\nselect mlt.amount as amountPaid,mlt.id,mlt.loan_id\nfrom m_loan_transaction mlt\nwhere mlt.is_reversed = 0 \ngroup by mlt.loan_id\n) as mlt on mlt.loan_id = ml.id\nright join m_loan_repayment_schedule as mls1 on ml.id = mls1.loan_id and mls1.`completed_derived` = 0\nand mls1.installment = (SELECT MIN(installment) from m_loan_repayment_schedule where loan_id = ml.id and duedate <= CURDATE() and completed_derived=0)\nwhere mc.status_enum = 300 and mobile_no is not null and ml.`loan_status_id` = 300\nand (mo.id = ${officeId} or ${officeId} = -1)\nand (mc.staff_id = ${loanOfficerId} or ${loanOfficerId} = -1)\nand (ml.loan_type_enum = ${loanType} or ${loanType} = -1)\nand ml.id in (select mla.loan_id from m_loan_arrears_aging mla)\ngroup by ml.id"
WHERE report_name = 'Loan Repayment';

UPDATE sms_campaign 
SET message='Hello {{firstname}}, repayment for {{LoanAccountId}} received. {{branch}}' 
WHERE  campaign_name='Loan Repayment';

UPDATE stretchy_report 
SET report_sql =  "select a.client_name, a.Guarantor_name, a.Guarantor_Branch, a.client_mobile_no, a.loan_id, a.client_id as id, productshort_Name, a.Guarantor_mobile_no as mobileNo, a.comitted_Shares from (select cl.firstname as client_name ,ifnull(go.firstname,concat(gu.firstname,gu.lastname)) as Guarantor_name,ifnull(o.name,\'NA \') as Guarantor_Branch,ifnull(go.mobile_no,gu.mobile_number) as Guarantor_mobile_no,co.name as Client_Branch,ifnull(cl.mobile_no,\'NA \') as client_mobile_no,cl.id as client_id,l.id as loan_id,mp.short_name as productshort_Name,ifnull(gfd.amount_remaining_derived,0) as comitted_Shares, max(mlt.transaction_date) as last_txn_date, ifnull(sum(mlaa.total_overdue_derived),0) as overdueAmount from m_loan l inner join m_loan_transaction mlt on mlt.loan_id = l.id and mlt.is_reversed = 0 inner join m_product_loan mp on mp.id=l.product_id inner join m_client cl on cl.id=l.client_id inner join m_guarantor gu on gu.loan_id=l.id left join m_guarantor_funding_details gfd on gfd.guarantor_id=gu.id left join m_client go on go.id=gu.entity_id join m_savings_account msa on go.id = msa.client_id and msa.client_id != l.client_id left join m_office o on o.id=go.office_id left join m_office co on co.id=cl.office_id inner join officedetails od on od.office_id=co.id join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id join event_sourcing_details esd on esd.report_name = \'DefaultWarning -  guarantors\' and esd.entity_mobile_no != go.mobile_no and esd.entity_mobile_no != cl.mobile_no where l.loan_status_id=300 and   gu.is_active=1 and gfd.status_enum = 100 and od.sms_enabled=true and case when ${officeId} =0 then 1=1 else o.id = ${officeId} end group by l.id, gu.id UNION select cl.firstname as client_name ,ifnull(go.firstname,concat(gu.firstname,gu.lastname)) as Guarantor_name ,ifnull(o.name,\'NA \') as Guarantor_Branch,ifnull(go.mobile_no,gu.mobile_number) as Guarantor_mobile_no, co.name as Client_Branch ,ifnull(cl.mobile_no,\'NA \') as client_mobile_no ,cl.id as client_id,l.id as loan_id,mp.short_name as productshort_Name, ifnull(gfd.amount_remaining_derived,0) as comitted_Shares, \'No_Date\' as last_txn_date, ifnull(sum(mlaa.total_overdue_derived),0) as overdueAmount from m_loan l inner join m_loan_transaction mlt on mlt.loan_id = l.id and mlt.is_reversed = 0 inner join m_product_loan mp on mp.id=l.product_id inner join m_client cl on cl.id=l.client_id inner join m_guarantor gu on gu.loan_id=l.id left join m_guarantor_funding_details gfd on gfd.guarantor_id=gu.id left join m_client go on go.id=gu.entity_id join m_savings_account msa on go.id = msa.client_id and msa.client_id != l.client_id left join m_office o on o.id=go.office_id left join m_office co on co.id=cl.office_id inner join officedetails od on od.office_id=co.id join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id where l.loan_status_id=300 and   gu.is_active=1 and gfd.status_enum = 100 and od.sms_enabled=true and case when ${officeId} =0 then 1=1 else o.id = ${officeId} end and  case when (select count(esd.mobile_no) from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = \'DefaultWarning -  guarantors\' and DATEDIFF(\'${startDate}\',esd.submittedon_date) between ${fromX} and ${toY} ) >0 then ifnull(go.mobile_no,gu.mobile_number) in ( select esd.mobile_no from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = \'DefaultWarning -  guarantors\' and DATEDIFF(\'${startDate}\',esd.submittedon_date) between ${fromX} and ${toY} group by esd.mobile_no) else 0 end group by l.id, gu.id )a where a.overdueAmount > 0\n	and\n	datediff(\'${startDate}\',a.last_txn_date) >= 150 or a.last_txn_date = \'No_Date\' "
WHERE report_name = 'DefaultWarning -  guarantors';

UPDATE stretchy_report 
SET report_sql =  "select a.client_name, a.branch_name, a.overdue_amount, a.mobile_no as mobileNo, a.loan_id, a.client_id as id,a.productshort_Name from (select c.firstname as client_name,o.name as branch_name, c.mobile_no as mobile_no,date_format(lrc.duedate,\'%M \')as month, c.id as client_id,l.id as loan_id,mp.short_name as productshort_Name,lrc.duedate as duedate, max(mlt.transaction_date) as last_txn_date,ifnull(mlaa.total_overdue_derived,0) as overdue_amount,if (((lrc.principal_amount+lrc.interest_amount)>(ifnull(lrc.principal_completed_derived,0)+ifnull(lrc.interest_completed_derived,0))),(datediff(\'${startDate}\',date_add(date_add(makedate(extract(year from lrc.duedate),extract(day from lrc.duedate)),interval extract(month from lrc.duedate) +3 month),interval 5 day))),null) as days, ifnull(sum(mlaa.total_overdue_derived),0) overdueAmount from m_client c inner join m_loan l on c.id=l.client_id inner join m_loan_transaction mlt on mlt.loan_id = l.id and mlt.is_reversed = 0 inner join m_product_loan mp on mp.id=l.product_id inner join m_loan_repayment_schedule lrc on lrc.loan_id=l.id inner join m_office o on c.office_id=o.id inner join officedetails od on od.office_id=o.id and od.sms_enabled=true join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id join event_sourcing_details esd on esd.report_name = \'DefaultWarning - Clients\' and esd.entity_mobile_no != c.mobile_no where datediff(\'${startDate}\',lrc.duedate)>=1 and  lrc.completed_derived=0 and l.loan_status_id=300 and case when ${officeId} =0 then 1=1 else o.id = ${officeId} end and case when ( select count(esd.mobile_no) from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 200 OR esd.status_enum =300) and rp.report_name = \'DefaultWarning - Clients\' and DATEDIFF(\'${startDate}\',esd.submittedon_date) between ${fromX} and ${toY}) >0 then c.mobile_no not in (select esd.mobile_no from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 200 OR esd.status_enum =300) and rp.report_name = \'DefaultWarning - Clients\' and DATEDIFF(\'${startDate}\',esd.submittedon_date) between ${fromX} and ${toY} group by esd.mobile_no ) else 1 end group by lrc.loan_id UNION select c.firstname as client_name,o.name as branch_name, c.mobile_no as mobile_no, date_format(lrc.duedate,\'%M \')as month, c.id as client_id,l.id as loan_id, mp.short_name as productshort_Name, lrc.duedate as duedate, \'No_Date\' as last_txn_date, ifnull(mlaa.total_overdue_derived,0) as overdue_amount, if (((lrc.principal_amount+lrc.interest_amount)>(ifnull(lrc.principal_completed_derived,0) +ifnull(lrc.interest_completed_derived,0))),(datediff(\'${startDate}\',date_add(date_add(makedate(extract(year from lrc.duedate), extract(day from lrc.duedate)),interval extract(month from lrc.duedate) +3 month), interval 5 day))),null) as days, ifnull(sum(mlaa.total_overdue_derived),0) overdueAmount from m_client c inner join m_loan l on c.id=l.client_id inner join m_loan_transaction mlt on mlt.loan_id = l.id and mlt.is_reversed = 0 inner join m_product_loan mp on mp.id=l.product_id inner join m_loan_repayment_schedule lrc on lrc.loan_id=l.id inner join m_office o on c.office_id=o.id inner join officedetails od on od.office_id=o.id and od.sms_enabled=true join m_loan_arrears_aging mlaa on mlaa.loan_id = l.id where l.loan_status_id=300 and case when ${officeId} =0 then 1=1 else o.id = ${officeId} end and case when (select count(esd.mobile_no) from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = \'DefaultWarning - Clients\' and DATEDIFF(\'${startDate}\',esd.submittedon_date) between ${fromX} and ${toY} ) >0 then c.mobile_no in ( select esd.mobile_no from sms_messages_outbound esd JOIN sms_campaign cam on cam.id = esd.campaign_id JOIN stretchy_report rp on rp.id = cam.report_id where (esd.status_enum = 400) and rp.report_name = \'DefaultWarning - Clients\' and DATEDIFF(\'${startDate}\',esd.submittedon_date) between ${fromX} and ${toY} group by esd.mobile_no ) else 0 end group by lrc.loan_id ) a where a.overdue_amount > 0 and datediff(\'${startDate}\',a.last_txn_date) >= 150 OR a.last_txn_date = \'No_Date\' "
WHERE report_name = 'DefaultWarning - Clients';

UPDATE stretchy_report 
SET report_sql =  "SELECT a.display_name,a.branch_name,a.last_transaction_date,\n       ifnull(a.mobile_no, \'NA\') as mobileNo,\n		 a.savings_Id,a.client_Id as id,a.product_Short_Name \nFROM\n\n(SELECT \n\n        cl.display_name,sa.product_id,cl.id as client_Id ,\n        cl.default_savings_product,sa.id as savings_Id,\n		  mo.name as branch_name,mp.short_name as product_Short_Name,\n        cl.mobile_no as mobile_no,\n        MAX(transaction_date)as last_transaction_date \n\nFROM m_office mo\nJOIN OfficeDetails od on od.office_id=mo.id and od.sms_enabled=true\nJOIN m_client cl on cl.office_id = mo.id and cl.status_enum = 300\ninner join m_savings_account sa on sa.client_id=cl.id and sa.status_enum = 300\ninner join m_savings_product mp on mp.id=sa.product_id\nleft join m_savings_account_transaction msa on msa.savings_account_id=sa.id and msa.is_reversed = 0\n\nWHERE sa.id=cl.default_savings_account\nAND case when ${officeId} =0 then\n         1=1\n         else \n         mo.id = ${officeId}\n         end\n         \nGROUP BY sa.account_no\n)a\n\nWHERE\nif(a.last_transaction_date is null, TIMESTAMPDIFF (MONTH,curDate(),\'${startDate}\')=0,\n TIMESTAMPDIFF (MONTH,a.last_transaction_date,\'${startDate}\')=4)"
WHERE report_name = 'DormancyWarning - Clients';
